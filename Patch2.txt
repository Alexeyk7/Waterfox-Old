
# HG changeset patch
# User Kearwood (Kip) Gilbert <kgilbert@mozilla.com>
# Date 1438907318 25200
# Node ID 821a65601cc0ce5a4961bd11e10a083f61c16f9e
# Parent  9d8134f02763653040aa35520a8012a141c92a42
Bug 1157984 - Part 4: Remove gfxRect::TransformBounds,r=vlad

diff --git a/gfx/thebes/gfxRect.cpp b/gfx/thebes/gfxRect.cpp
--- a/gfx/thebes/gfxRect.cpp
+++ b/gfx/thebes/gfxRect.cpp
@@ -25,46 +25,16 @@ gfxRect::TransformToQuad(const mozilla::
   points[1].Transform(aMatrix);
   points[2].Transform(aMatrix);
   points[3].Transform(aMatrix);
 
   // Could this ever result in lines that intersect? I don't think so.
   return gfxQuad(points[0], points[1], points[2], points[3]);
 }
 
-void
-gfxRect::TransformBounds(const mozilla::gfx::Matrix4x4 &aMatrix)
-{
-  gfxPoint quad[4];
-
-  quad[0] = TopLeft();
-  quad[1] = TopRight();
-  quad[2] = BottomLeft();
-  quad[3] = BottomRight();
-
-  quad[0].Transform(aMatrix);
-  double min_x = quad[0].x;
-  double max_x = quad[0].x;
-  double min_y = quad[0].y;
-  double max_y = quad[0].y;
-
-  for (int i=1; i<4; i++) {
-    quad[i].Transform(aMatrix);
-    min_x = std::min(quad[i].x, min_x);
-    max_x = std::max(quad[i].x, max_x);
-    min_y = std::min(quad[i].y, min_y);
-    max_y = std::max(quad[i].y, max_y);
-  }
-
-  x = min_x;
-  y = min_y;
-  width = max_x - min_x;
-  height = max_y - min_y;
-}
-
 static bool
 WithinEpsilonOfInteger(gfxFloat aX, gfxFloat aEpsilon)
 {
     return fabs(NS_round(aX) - aX) <= fabs(aEpsilon);
 }
 
 bool
 gfxRect::WithinEpsilonOfIntegerPixels(gfxFloat aEpsilon) const
diff --git a/gfx/thebes/gfxRect.h b/gfx/thebes/gfxRect.h
--- a/gfx/thebes/gfxRect.h
+++ b/gfx/thebes/gfxRect.h
@@ -145,16 +145,11 @@ struct gfxRect :
         width /= k;
         height /= k;
     }
 
     /*
      * Transform this rectangle with aMatrix, resulting in a gfxQuad.
      */
     gfxQuad TransformToQuad(const mozilla::gfx::Matrix4x4 &aMatrix) const;
-
-    /*
-     * Transform this rectangle with aMatrix, as an axis-aligned bounding box
-     */
-    void TransformBounds(const mozilla::gfx::Matrix4x4 &aMatrix);
 };
 
 #endif /* GFX_RECT_H */

